FROM ubuntu:20.04
ARG DEBIAN_FRONTEND=noninteractive

# Install python3.8 and nodejs14
RUN apt-get update && apt-get install -y \
    python3.8 \
    python3-pip \
    python3-dev \
    nodejs \
    npm \
    && apt-get -y install libpq-dev gcc \
    && rm -rf /var/lib/apt/lists/* 
# chromium

RUN apt update
RUN apt-get install -y wget


# install google chrome
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
RUN sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
RUN apt-get -y update
RUN apt-get install -y google-chrome-stable

# install chromedriver
RUN apt-get install -yqq unzip
RUN apt-get install -y chromium-driver

# set display port to avoid crash
ENV DISPLAY=:99


# #download and install chrome
# RUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
# RUN dpkg -i google-chrome-stable_current_amd64.deb; apt-get -fy install

# Set the working directory to /app
WORKDIR /app

# Copy requirements.txt and package.json into the container at /app
COPY requirements.txt /app/requirements.txt
COPY package*.json /app/


# Install any needed packages specified in requirements.txt
RUN pip install --upgrade pip
RUN pip install -r requirements.txt


# Install any needed packages specified in package.json
RUN npm install

# Copy the current directory contents into the container at /app
COPY . /app


# Expose port 8008 for the Django application
EXPOSE 8008

# Collect static files
RUN python3 manage.py collectstatic --noinput


# RUN python manage.py makemigrations

# # # Run Django migrations
# RUN python manage.py migrate

